<configuration>

    <!-- ========== local ========== -->
    <springProfile name="local">
        <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>logs/app.log</file>
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <charset>UTF-8</charset>
                <providers>
                    <timestamp>
                        <fieldName>timestamp</fieldName>
                        <timeZone>Asia/Seoul</timeZone>
                    </timestamp>
                    <logLevel>
                        <fieldName>level</fieldName>
                    </logLevel>
                    <loggerName/>
                    <threadName/>

                    <!-- MDC 필드 -->
                    <mdc>
                        <includeMdcKeyName>userId</includeMdcKeyName>
                        <includeMdcKeyName>part</includeMdcKeyName>
                        <includeMdcKeyName>className</includeMdcKeyName>
                        <includeMdcKeyName>method</includeMdcKeyName>
                    </mdc>

                    <loggerName/>

                    <message>
                        <fieldName>message</fieldName>
                    </message>
                    <throwable>
                        <classNameFieldName>errorCause</classNameFieldName>
                        <messageFieldName>error</messageFieldName>
                        <stackTraceFieldName>stackTrace</stackTraceFieldName>
                        <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                            <rootCauseFirst>true</rootCauseFirst>
                            <maxDepthPerThrowable>50</maxDepthPerThrowable>
                            <maxLength>8000</maxLength>
                            <shortenedClassNameLength>40</shortenedClassNameLength>
                        </throwableConverter>
                    </throwable>
                </providers>
            </encoder>

            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>logs/app.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>7</maxHistory>
                <cleanHistoryOnStart>true</cleanHistoryOnStart>
            </rollingPolicy>
        </appender>

        <root level="INFO">
            <appender-ref ref="FILE"/>
        </root>
    </springProfile>

    <!-- ========== dev ========== -->
    <springProfile name="dev">
        <appender name="FILE_JSON" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>/home/ubuntu/monitoring/logs/app.log</file>
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <charset>UTF-8</charset>
                <providers>
                    <timestamp>
                        <fieldName>timestamp</fieldName>
                        <timeZone>Asia/Seoul</timeZone>
                    </timestamp>
                    <logLevel><fieldName>level</fieldName></logLevel>

                    <loggerName><fieldName>logger</fieldName></loggerName>

                    <!-- MDC 필드 -->
                    <mdc>
                        <includeMdcKeyName>userId</includeMdcKeyName>
                        <includeMdcKeyName>traceId</includeMdcKeyName>
                        <includeMdcKeyName>spanId</includeMdcKeyName>
                    </mdc>

                    <message><fieldName>message</fieldName></message>

                    <!-- ERROR에서만 스택이 찍히도록 throwable 추가 (warn/info는 ex 미전달) -->
                    <throwable>
                        <classNameFieldName>errorCause</classNameFieldName>
                        <messageFieldName>error</messageFieldName>
                        <stackTraceFieldName>stackTrace</stackTraceFieldName>
                        <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                            <rootCauseFirst>true</rootCauseFirst>
                            <maxDepthPerThrowable>50</maxDepthPerThrowable>
                            <maxLength>8000</maxLength>
                            <shortenedClassNameLength>40</shortenedClassNameLength>
                        </throwableConverter>
                    </throwable>
                </providers>
            </encoder>

            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>/home/ubuntu/monitoring/logs/app.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>7</maxHistory>
                <cleanHistoryOnStart>true</cleanHistoryOnStart>
            </rollingPolicy>
        </appender>

        <!-- HTTP 요약 로그(INFO) 보장 -->
        <logger name="HTTP" level="INFO"/>
        <logger name="com.chukchuk.haksa" level="INFO"/>

        <appender name="SENTRY" class="io.sentry.logback.SentryAppender">
            <minimumEventLevel>Warn</minimumEventLevel>
            <minimumBreadcrumbLevel>INFO</minimumBreadcrumbLevel>
            <mdcTags>userId,traceId,spanId</mdcTags>
        </appender>

        <root level="WARN">
            <appender-ref ref="FILE_JSON"/>
            <appender-ref ref="SENTRY"/>
        </root>
    </springProfile>

    <!-- ========== prod ========== -->
    <springProfile name="prod">
        <appender name="FILE_JSON" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>/home/ubuntu/monitoring/logs/app.log</file>
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <charset>UTF-8</charset>
                <providers>
                    <timestamp>
                        <fieldName>timestamp</fieldName>
                        <timeZone>Asia/Seoul</timeZone>
                    </timestamp>
                    <logLevel><fieldName>level</fieldName></logLevel>

                    <loggerName><fieldName>logger</fieldName></loggerName>

                    <mdc>
                        <includeMdcKeyName>userId</includeMdcKeyName>
                        <includeMdcKeyName>traceId</includeMdcKeyName>
                        <includeMdcKeyName>spanId</includeMdcKeyName>
                    </mdc>

                    <message><fieldName>message</fieldName></message>

                    <!-- ERROR에서만 스택 출력 -->
                    <throwable>
                        <classNameFieldName>errorCause</classNameFieldName>
                        <messageFieldName>error</messageFieldName>
                        <stackTraceFieldName>stackTrace</stackTraceFieldName>
                        <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                            <rootCauseFirst>true</rootCauseFirst>
                            <maxDepthPerThrowable>50</maxDepthPerThrowable>
                            <maxLength>8000</maxLength>
                            <shortenedClassNameLength>40</shortenedClassNameLength>
                        </throwableConverter>
                    </throwable>
                </providers>
            </encoder>

            <!-- ⬇운영 보존 정책 강화: gzip 압축 + 30일 -->
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>/home/ubuntu/monitoring/logs/app.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
                <maxHistory>30</maxHistory>
                <cleanHistoryOnStart>true</cleanHistoryOnStart>
            </rollingPolicy>
        </appender>

        <!-- HTTP 요약 로그(INFO) 보장 -->
        <logger name="HTTP" level="INFO"/>
        <logger name="com.chukchuk.haksa" level="INFO"/>

        <appender name="SENTRY" class="io.sentry.logback.SentryAppender">
            <minimumEventLevel>Warn</minimumEventLevel>
            <minimumBreadcrumbLevel>INFO</minimumBreadcrumbLevel>
            <mdcTags>userId,traceId,spanId</mdcTags>
        </appender>

        <root level="WARN">
            <appender-ref ref="FILE_JSON"/>
            <appender-ref ref="SENTRY"/>
        </root>
    </springProfile>

</configuration>