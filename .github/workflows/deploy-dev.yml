name: Deploy to Dev EC2

on:
  push:
    branches: [ "dev" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Build jar with Gradle
        run: ./gradlew clean bootJar -x test
        env:
          SPRING_PROFILES_ACTIVE: local
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_ACCESS_EXPIRATION: ${{ secrets.JWT_ACCESS_EXPIRATION }}
          JWT_REFRESH_EXPIRATION: ${{ secrets.JWT_REFRESH_EXPIRATION }}
          APP_KEY: ${{ secrets.APP_KEY }}
          CRAWLER_BASE_URL: ${{ secrets.CRAWLER_BASE_URL }}
          REDIS_ENCRYPT_KEY: ${{ secrets.REDIS_ENCRYPT_KEY }}

          LOCAL_DB_URL: ${{ secrets.LOCAL_DB_URL }}
          LOCAL_DB_USERNAME: ${{ secrets.LOCAL_DB_USERNAME }}
          LOCAL_DB_PASSWORD: ${{ secrets.LOCAL_DB_PASSWORD }}
          LOCAL_REDIS_HOST: ${{ secrets.LOCAL_REDIS_HOST }}
          LOCAL_REDIS_PORT: ${{ secrets.LOCAL_REDIS_PORT }}

      - name: Rename jar to app.jar
        run: |
          mkdir -p deploy
          JAR_PATH=$(find build/libs -name "*.jar" | head -n 1)
          echo "Found jar: $JAR_PATH"
          cp "$JAR_PATH" deploy/app.jar

      - name: Copy app.jar to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEV_EC2_HOST }}
          username: ${{ secrets.DEV_EC2_USER }}
          key: ${{ secrets.DEV_EC2_KEY }}
          source: "deploy/app.jar"
          target: "/home/ubuntu/app"
          strip_components: 1

      - name: Restart Spring Boot app on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEV_EC2_HOST }}
          username: ${{ secrets.DEV_EC2_USER }}
          key: ${{ secrets.DEV_EC2_KEY }}
          script: |
            bash -c '
              set +e
              source /home/ubuntu/env.sh
              echo "SPRING_PROFILES_ACTIVE=$SPRING_PROFILES_ACTIVE"
              cd /home/ubuntu/app

              # 정확히 java로 실행된 app.jar만 찾기
              PID=$(ps aux | grep "java -jar app.jar" | grep -v grep | awk "{print \$2}")
              if [ -n "$PID" ]; then
                echo "Killing app.jar java process: $PID"
                kill -9 $PID || true
              fi

              nohup java -jar app.jar --spring.profiles.active=$SPRING_PROFILES_ACTIVE > app.log 2>&1 &
              sleep 1
              exit 0
            '